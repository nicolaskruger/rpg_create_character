{"version":3,"sources":["app/Character/RPGClass.ts","app/Character/Atributs.ts","components/sliderCharacter/SliderCharacter.tsx","components/atributs/AtributsCharacter.tsx","components/ClassImg/img/mage.png","components/ClassImg/img/warior.jpg","components/ClassImg/img/archer.png","components/ClassImg/ClassImage.tsx","components/Class/ClassCharacter.tsx","components/finish/FinishCharacter.tsx","context/ValidaCharacter.ts","app/Validation/Validate.ts","components/Name/NameCharacter.tsx","components/form/FormCharacter.tsx","components/theme/Theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RPGClass","calcPoints","atributs","Object","keys","map","v","reduce","acc","curr","SliderCharacter","key","myKey","atlAtributs","Typography","id","gutterBottom","Slider","className","value","aria-labelledby","valueLabelDisplay","step","onChange","event","val","marks","min","max","AtribtsCharacter","onSubmit","currChar","next","prev","React","atribts","setAtributs","ponts","newAtribut","i","Button","variant","onClick","ClassImg","selcet","name","checked","ARCHER","src","archer","alt","MAGE","mage","WARRIOR","warior","ClassCharacter","rpgClass","clas","setClass","changeClass","FinishCharacter","currCharacer","life","strong","stamina","mana","validacoesCharacter","test","valid","text","atribut","NameCharacter","setName","validate","erro","setErro","submit","evet","TextField","required","margin","target","label","onBlur","error","helperText","type","color","FormCharacter","defaultCharecter","setI","character","setCharacter","updateNameCharacter","updateAtributsCharacter","updateRPGClass","swith","Stepper","activeStep","Step","StepLabel","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","App","ThemeProvider","ScopedCssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fde69d1e.chunk.js","sourcesContent":["enum RPGClass{\n    ARCHER=0,\n    WARRIOR,\n    MAGE\n}\n\nexport {RPGClass};","\ninterface Atributs{\n    life:number;\n    strong:number;\n    stamina:number;\n    mana:number;\n}\n\nfunction calcPoints(atributs:Atributs){\n    return (Object.keys(atributs) as Array<keyof typeof atributs>)\n    .map(v=>atributs[v])\n    .reduce((acc,curr)=>acc+curr,0);\n}\n\nexport type {Atributs}\nexport {calcPoints}","import { Slider, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport { Atributs } from '../../app/Character';\n\ninterface SliderIntf{\n    myKey:keyof Atributs;\n    atributs:Atributs;\n    atlAtributs: (key:keyof Atributs, val:number)=>void\n}\n\nfunction SliderCharacter({myKey: key, atributs, atlAtributs }:SliderIntf){\n    return (\n        <>\n            <Typography id=\"discrete-slider\" gutterBottom>\n                   {key}\n                </Typography>\n                <Slider\n                    className=\"slider__atributs\"\n                  value={atributs[key]}\n                  aria-labelledby=\"discrete-slider\"\n                  valueLabelDisplay=\"auto\"\n                  step={1}\n                  onChange={(event,val)=>{\n                      atlAtributs(key, val as number)\n                  }}\n                  marks\n                  min={0}\n                  max={10}\n                />\n        </>\n    );\n}\n\nexport {SliderCharacter};","import { Button } from '@material-ui/core';\nimport * as React from 'react';\nimport { Atributs } from '../../app/Character';\nimport { calcPoints } from '../../app/Character/Atributs';\nimport { IntSteps } from '../InterafceSteps';\nimport { SliderCharacter } from '../sliderCharacter/SliderCharacter';\nimport './styles.css'\n\ntype AtributsIntf = IntSteps & {\n    onSubmit:(atb:Atributs)=>void\n}\n\nfunction AtribtsCharacter({onSubmit,currChar,next,prev}:AtributsIntf){\n    const maxPoints = 20;\n    const [atribts,setAtributs] = React.useState(currChar.atributs);\n    const keys:Array<keyof Atributs> = ['life','mana','stamina','strong'];\n    const ponts = maxPoints - calcPoints(atribts)\n    const atlAtributs = (key:keyof Atributs, val:number) =>{\n        const newAtribut = {...atribts};\n        newAtribut[key] = val;\n        const newPoints = maxPoints - calcPoints(newAtribut)\n        if(newPoints >= 0){\n            onSubmit(newAtribut);\n            setAtributs(newAtribut);\n        }\n    }\n    return (\n        <>\n\n            <section className=\"class__section__atributs\">\n                {keys.map((v, i)=><SliderCharacter key={i} myKey={v} atributs={atribts} atlAtributs={atlAtributs} />)}\n                <p>{`${ponts}`}</p>\n            </section>\n            <section className=\"class__section__button\">\n                <Button variant=\"contained\"\n                    onClick={(event) =>{if (prev) prev()} }\n                >\n                    PREV\n                </Button>\n                <Button variant=\"contained\" \n                    onClick={(event) =>{if (next) next()} }\n                >\n                    NEXT\n                </Button>\n            </section>\n        </>\n    )\n}\n\nexport {AtribtsCharacter};","export default __webpack_public_path__ + \"static/media/mage.039bfc83.png\";","export default __webpack_public_path__ + \"static/media/warior.150b370c.jpg\";","export default __webpack_public_path__ + \"static/media/archer.08b86383.png\";","import * as React from 'react';\nimport mage from './img/mage.png';\nimport warior from './img/warior.jpg';\nimport archer from './img/archer.png';\nimport { RPGClass } from '../../app/Character';\nimport './styles.css'\n\ntype EnumDictionary<T extends string | symbol | number, U> = {\n    [K in T]: U;\n};\ninterface CImgIntf{\n    selcet:RPGClass,\n    checked:boolean\n}\n\nfunction ClassImg({selcet, checked}:CImgIntf){\n    const name = checked?\"check img__class\":\"img__class\";\n    const swith: EnumDictionary<RPGClass, JSX.Element> = {\n        [RPGClass.ARCHER]: <img className={name} src={archer} alt=\"archer\"/>,\n        [RPGClass.MAGE]: <img className={name} src={mage} alt=\"mage\"/>,\n        [RPGClass.WARRIOR]: <img className={name} src={warior} alt=\"mage\"/>,\n    }\n    return swith[selcet];\n}\n\nexport {ClassImg};","import { Button } from '@material-ui/core';\nimport * as React from 'react';\nimport { IntSteps } from '../InterafceSteps';\nimport {ClassImg} from '../ClassImg/ClassImage';\nimport { RPGClass } from '../../app/Character';\nimport './styles.css'\n\ntype ClassIntf = IntSteps & {\n    onSubmit:(clas:RPGClass)=>void\n}\n\nfunction ClassCharacter({onSubmit, currChar, next, prev }: ClassIntf) {\n    const [clas,setClass] = React.useState(currChar.rpgClass);\n    const changeClass = (clas:RPGClass) =>{\n        onSubmit(clas);\n        setClass(clas);\n    }\n    return (\n        <section className=\"class__section\">\n\n            <ul className =\"class__ul\">\n                <li onClick={()=>changeClass(RPGClass.ARCHER)} className = \"class__li\">\n                    <ClassImg checked={clas===RPGClass.ARCHER} selcet={RPGClass.ARCHER} />\n                </li>\n                <li onClick={()=>changeClass(RPGClass.MAGE)} className = \"class__li\">\n                    <ClassImg checked={clas===RPGClass.MAGE} selcet={RPGClass.MAGE} />\n                </li>\n                <li onClick={()=>changeClass(RPGClass.WARRIOR)} className = \"class__li\">\n                    <ClassImg checked={clas===RPGClass.WARRIOR} selcet={RPGClass.WARRIOR} />    \n                </li>\n            </ul>\n            <section className=\"class__section__button\">\n                <Button variant=\"contained\"\n                    onClick={(event) =>{if (prev) prev()} }\n                >\n                    PREV\n                </Button>\n                <Button variant=\"contained\" \n                    onClick={(event) =>{if (next) next()} }\n                >\n                    NEXT\n                </Button>\n            </section>\n        </section>\n    );\n}\n\nexport { ClassCharacter }","import * as React from 'react';\nimport { Character } from '../../app/Character';\nimport { ClassImg } from '../ClassImg/ClassImage';\nimport './styles.css'\n\ninterface FinishIntf{\n    currCharacer:Character\n}\n\nfunction FinishCharacter({currCharacer}:FinishIntf){\n    return (\n        <section className=\"section__finish\">\n            <h1>{currCharacer.name}</h1>\n            <ClassImg checked={true} selcet={currCharacer.rpgClass}/>\n            <ul>\n                <li>\n                    life: {currCharacer.atributs.life}\n                </li>\n                <li>\n                    strong: {currCharacer.atributs.strong}\n                </li>\n                <li>\n                    stamina: {currCharacer.atributs.stamina}\n                </li>\n                <li>\n                    mana: {currCharacer.atributs.mana}\n                </li>\n            </ul>     \n        </section>\n    );\n}\n\nexport {FinishCharacter}","import * as React from 'react';\nimport {validAtributs,validName} from '../app/Validation/Validate'\n\nconst validacoesCharacter = React.createContext(\n    {name:validName, atribut:validAtributs}\n);\n\nexport {validacoesCharacter}","import { Atributs } from \"../Character\";\nimport { calcPoints } from \"../Character/Atributs\";\n\ninterface Valid {\n    valid: boolean;\n    text: string;\n}\n\nconst validName = (name: string): Valid => {\n    if (/^[a-zA-Z]+$/.test(name))\n        return {\n            valid: true,\n            text: \"\"\n        }\n    return {\n        valid :false,\n        text: \"name only content alphabet caracteres\"\n    }\n}\n\nconst validAtributs = (atributs:Atributs, max:number): Valid =>{\n    const val = calcPoints(atributs);\n    if(val <= max)\n        return {\n            valid: true,\n            text: \"\"\n        }\n    return{\n        valid: false,\n        text: `the value excedes the max atributs allowed remove ${val - max}`\n    }\n}\n\nexport type { Valid};\nexport {validName, validAtributs}","import * as React from 'react';\nimport { IntSteps } from '../InterafceSteps';\nimport { Button, TextField } from '@material-ui/core'\nimport {validacoesCharacter} from '../../context/ValidaCharacter'\nimport {Valid} from '../../app/Validation/Validate';\nimport './styles.css';\n\ntype NameIntf = IntSteps & {\n    onSubmit:(name:string)=>void\n}\n\nfunction NameCharacter({onSubmit, currChar,  next }: NameIntf) {\n    const [name,setName] = React.useState(currChar.name)\n    const validate = React.useContext(validacoesCharacter).name;\n    const defaultErro:Valid = {text:\"\",valid:true} \n    const [erro,setErro] = React.useState(defaultErro)\n    const submit = ()=>{\n        if (next && erro.valid){\n            onSubmit(name);\n            next();\n        } \n    }\n    return (\n        <form className=\"name__section\" \n            onSubmit={(evet) => { submit(); }}>\n            <TextField\n                className = \"text__name\"\n                required\n                value={name}\n                variant=\"outlined\"\n                margin=\"normal\"\n                onChange={(event)=>{\n                    setName(event.target.value)\n                    setErro(validate(event.target.value))\n                }}\n                id=\"name\"\n                name=\"name\"\n                label=\"Name\"\n                onBlur={(event)=>setErro(validate(event.target.value))}\n                error = {!erro.valid}\n                helperText ={erro.text}\n            />\n            <Button className=\"button__name\" type=\"submit\" variant=\"contained\" color=\"primary\">\n                Next\n            </Button>\n        </form>\n    );\n}\n\nexport { NameCharacter }","import { Step, StepLabel, Stepper } from '@material-ui/core';\nimport * as React from 'react';\nimport { Atributs, Character, RPGClass } from '../../app/Character';\nimport { AtribtsCharacter } from '../atributs/AtributsCharacter';\nimport { ClassCharacter } from '../Class/ClassCharacter';\nimport { FinishCharacter } from '../finish/FinishCharacter';\nimport { NameCharacter } from '../Name/NameCharacter';\nimport './styles.css'\n\nfunction FormCharacter() {\n    \n    const defaultCharecter:Character = {\n        atributs: {\n            life: 0,\n            mana: 0,\n            stamina: 0,\n            strong: 0,\n        },\n        name: \"\",\n        rpgClass: RPGClass.ARCHER\n    }\n    let [i, setI] = React.useState(0);\n    let [character, setCharacter] = React.useState(defaultCharecter);\n\n    const next = () => {\n        setI(i + 1);\n    }\n    const prev = () => {\n        setI(i - 1);\n    }\n    const updateNameCharacter = (name:string) =>{\n        setCharacter({...character,name});\n    }\n    const updateAtributsCharacter = (atributs:Atributs) =>{\n        setCharacter({...character,atributs:{...atributs}});\n    }\n    const updateRPGClass = (rpgClass:RPGClass) =>{\n        setCharacter({...character,rpgClass});\n    }\n\n    const swith = [\n        () => <NameCharacter onSubmit={updateNameCharacter} currChar={character} next={next} />,\n        () => <ClassCharacter onSubmit={updateRPGClass} currChar={character} next={next} prev={prev} />,\n        () => <AtribtsCharacter onSubmit={updateAtributsCharacter} currChar={character} next={next} prev={prev} />,\n        () => <FinishCharacter currCharacer={character} />\n    ]\n    return (\n        <section className=\"form__section\">\n            <Stepper activeStep={i}>\n                <Step><StepLabel>Name</StepLabel></Step>\n                <Step><StepLabel>Class</StepLabel></Step>\n                <Step><StepLabel>Atribts</StepLabel></Step>\n                <Step><StepLabel>End</StepLabel></Step>\n            </Stepper>\n                {swith[i]()}\n        </section>\n    )\n}\n\nexport { FormCharacter };\n\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n    type: 'dark',\n  },\n});\n\nexport {theme}","import React from 'react';\nimport './App.css';\nimport {FormCharacter} from './components/form/FormCharacter'\nimport { ThemeProvider } from '@material-ui/core';\nimport { theme } from './components/theme/Theme';\nimport ScopedCssBaseline from '@material-ui/core/ScopedCssBaseline';\n\nfunction App() {\n  return (\n      <ThemeProvider theme={theme} >\n              <ScopedCssBaseline className = \"App\">\n\n                  <FormCharacter/>\n\n              </ScopedCssBaseline>\n      </ThemeProvider>\n    \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}